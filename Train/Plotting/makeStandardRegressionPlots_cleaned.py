#infile='<tree_association.txt file generated by the predict.py script>'

infile='tree_association.txt'
#infile='/work/data/test_joona/Default/friendTrees/tree_association.txt'
from testing import makePlots_async
from Comparisons import Comparison,Comparison_Stack
import os.path
import time
import sys
from argparse import ArgumentParser

parser = ArgumentParser('Create the base plots (Compare=False) or comparison plots out of baseplots (Compare=True')
parser.add_argument("--compare", default='')
args = parser.parse_args()


Compare=args.compare
#Compare=True
print Compare

#usedCorr="gen_pt" 
prediction="jet_corr_pt*reg_Pt/"
genPt="gen_pt_WithNu"
#genPt="gen_pt_Recluster"

class_labels=['B','G','UDS']
class_conditions=['isB+isBB+isLeptonicB+isLeptonicB_C','isPhysG','isUD+isS']
colors=['red','green','blue']
extras=" && QG_ptD>=0.0 && QG_ptD<1.1 && QG_axis2>=0.0 && QG_axis2<0.1 && QG_mult>=0 && QG_mult<=25"
#extras=" "

eta_bins=[[0.0,1.3],[1.3,2.5]]
pt_bins=[[50.0,70.0],[100.0,200.0]]


#Pltos for different eta and pt bins:
names_eta_bin=[]
names_eta_pt_bin=[]
for eta_ in eta_bins:

	outname="Eta_"+str(eta_[0])+"_"+str(eta_[1])
	outname=outname.replace(".","p")
	name_l1l2l3=outname+"_L1L2L3.pdf"
	name_reg=outname+"_regression.pdf"
	names_eta_bin.append([name_l1l2l3,name_reg])
	conditions=[]
        for i in range(0,len(class_conditions)):
        	conditions.append(class_conditions[i]+'&&TMath::Abs(jet_eta)>='+str(eta_[0])+'&&TMath::Abs(jet_eta)<'+str(eta_[1])+extras)

	if not Compare:
	        #Resolution
		makePlots_async(infile,class_labels,'jet_corr_pt/'+genPt+':'+genPt,conditions,colors,"Resolution_"+name_l1l2l3,'gen p_{T}','resolution',False,True,"StandardDeviationNormByMean",False,0.0,0.6,xbins_=30,xmin_=0.0,xmax_=300.0)
	        makePlots_async(infile,class_labels,prediction+genPt+':'+genPt,conditions,colors,"Resolution_"+name_reg,'gen p_{T}','resolution',False,True,"StandardDeviationNormByMean",False,0.0,0.6,xbins_=30,xmin_=0.0,xmax_=300.0)
		makePlots_async(infile,class_labels,genPt,conditions,colors,"DENSITY_Resolution_"+name_l1l2l3,'gen p_{T}','Njets',False,False,"None",False,xbins_=30,xmin_=0.0,xmax_=300.0)

	for pt_ in pt_bins:
		outname="Eta_"+str(eta_[0])+"_"+str(eta_[1])+"_Pt_"+str(pt_[0])+"_"+str(pt_[1])
		outname=outname.replace(".","p")
		conditions=[]
		for i in range(0,len(class_conditions)):
			conditions.append(class_conditions[i]+'&&'+genPt+'>='+str(pt_[0])+'&&'+genPt+'<'+str(pt_[1])+'&&TMath::Abs(jet_eta)>='+str(eta_[0])+'&&TMath::Abs(jet_eta)<'+str(eta_[1])+extras)
#			conditions.append(class_conditions[i]+'&&'+'jet_corr_pt'+'>='+str(pt_[0])+'&&'+'jet_corr_pt'+'<'+str(pt_[1])+'&&TMath::Abs(jet_eta)>='+str(eta_[0])+'&&TMath::Abs(jet_eta)<'+str(eta_[1])+extras)
		name_l1l2l3=outname+"_L1L2L3.pdf"
		name_reg=outname+"_regression.pdf"
		names_eta_pt_bin.append([name_l1l2l3,name_reg])

		if not Compare:
			#Response
			makePlots_async(infile,class_labels,"jet_corr_pt/"+genPt,conditions,colors,"Response_"+name_l1l2l3,'response','jets',True,False,"None",False,0.0,1.3,xbins_=20,xmin_=0.0,xmax_=2.0)
	                makePlots_async(infile,class_labels,prediction+genPt,conditions,colors,"Response_"+name_reg,'response','jets',True,False,"None",False,0.0,1.3,xbins_=20,xmin_=0.0,xmax_=2.0)

			#QGL variables
			makePlots_async(infile,class_labels,"jet_corr_pt/"+genPt+":QG_ptD",conditions,colors,"QG_ptD_Response_"+name_l1l2l3,'p_{T}D','response',False,True,"Mean",False,0.0,1.1,xbins_=20,xmin_=0.0,xmax_=1.)
			makePlots_async(infile,class_labels,prediction+genPt+":QG_ptD",conditions,colors,"QG_ptD_Response_"+name_reg,'p_{T}D','response',False,True,"Mean",False,0.0,1.1,xbins_=20,xmin_=0.0,xmax_=1.)
	                makePlots_async(infile,class_labels,"QG_ptD",conditions,colors,"DENSITY_QG_ptD_Response_"+name_l1l2l3,'p_{T}D','Njets',False,False,"None",False,0.0,1.1,xbins_=20,xmin_=0.0,xmax_=1.)
	#                makePlots_async(infile,class_labels,"QG_ptD",conditions,colors,"DENSITY_QG_ptD_Response_"+name_reg,'p_{T}D','Njets',False,False,"None",False,0.0,1.1,xbins_=20,xmin_=0.0,xmax_=1.)

	                makePlots_async(infile,class_labels,"jet_corr_pt/"+genPt+":QG_axis2",conditions,colors,"QG_axis2_Response_"+name_l1l2l3,'#sigma_{2}','response',False,True,"Mean",False,0.0,1.1,xbins_=20,xmin_=0.0,xmax_=0.1)
	                makePlots_async(infile,class_labels,prediction+genPt+":QG_axis2",conditions,colors,"QG_axis2_Response_"+name_reg,'#sigma_{2}','response',False,True,"Mean",False,0.0,1.1,xbins_=20,xmin_=0.0,xmax_=0.1)
	                makePlots_async(infile,class_labels,"QG_axis2",conditions,colors,"DENSITY_QG_axis2_Response_"+name_l1l2l3,'#sigma_{2}','Njets',False,False,"None",False,0.0,1.1,xbins_=20,xmin_=0.0,xmax_=0.1)
	#                makePlots_async(infile,class_labels,"QG_axis2",conditions,colors,"DENSITY_QG_axis2_Response_"+name_reg,'#sigma_{2}','Njets',False,False,"None",False,0.0,1.1,xbins_=20,xmin_=0.0,xmax_=0.1)


	                makePlots_async(infile,class_labels,"jet_corr_pt/"+genPt+":QG_mult",conditions,colors,"QG_mult_Response_"+name_l1l2l3,'N const.','response',False,True,"Mean",False,0.5,1.5,xbins_=25,xmin_=0.,xmax_=25.0)
	                makePlots_async(infile,class_labels,prediction+genPt+":QG_mult",conditions,colors,"QG_mult_Response_"+name_reg,'N const.','response',False,True,"Mean",False,0.5,1.5,xbins_=25,xmin_=0.,xmax_=25.)
	                makePlots_async(infile,class_labels,"QG_mult",conditions,colors,"DENSITY_QG_mult_Response_"+name_l1l2l3,'N of const.','Njets',False,False,"None",False,0.0,1.1,xbins_=25,xmin_=0.,xmax_=25.)
	#                makePlots_async(infile,class_labels,"QG_mult",conditions,colors,"DENSITY_QG_mult_Response_"+name_reg,'N of const.','Njets',False,False,"None",False,0.0,1.1,xbins_=25,xmin_=0.,xmax_=25.)



#while True:
#	try:
#		for i in range(0,len(names_resp)):
#			ind=0
#			if i%len(pt_bins)==0:
#				ind=ind+1

#			name="Comparison_"+"Response_"+names_resp[i][0].replace("_L1L2L3.pdf",".pdf")
#			title="Comparison of responses in #eta "+str(eta_bins[ind][0])+"-"+str(eta_bins[ind][1]) + " and p_{T} "+str(pt_bins[i%len(pt_bins)][0])+"-"+str(pt_bins[i%len(pt_bins)][1])
#			Comparison(class_labels,colors,"Response_"+names_resp[i][0].replace(".pdf",".root"),"Response_"+names_resp[i][1].replace(".pdf",".root"),title,'Response','Jets',0.0,2.0,0.0,20.0,name,False)

#			name="Comparison_"+"QG_ptD_Response_"+names_resp[i][0].replace("_L1L2L3.pdf",".pdf")
#			title="Comparison of responses vs. QG p_{T}D in #eta "+str(eta_bins[ind][0])+"-"+str(eta_bins[ind][1]) + " and p_{T} "+str(pt_bins[i%len(pt_bins)][0])+"-"+str(pt_bins[i%len(pt_bins)][1])
#			Comparison(class_labels,colors,"QG_ptD_Response_"+names_resp[i][0].replace(".pdf",".root"),"QG_ptD_Response_"+names_resp[i][1].replace(".pdf",".root"),title,"p_{T}D","Response",0.0,0.6,0.7,1.4,name,False,binWidth=0.05)

#                        name="Comparison_"+"QG_axis2_Response_"+names_resp[i][0].replace("_L1L2L3.pdf",".pdf")
#                        title="Comparison of responses vs. QG #sigma_{2} in #eta "+str(eta_bins[ind][0])+"-"+str(eta_bins[ind][1]) + " and p_{T} "+str(pt_bins[i%len(pt_bins)][0])+"-"+str(pt_bins[i%len(pt_bins)][1])
#                        Comparison(class_labels,colors,"QG_axis2_Response_"+names_resp[i][0].replace(".pdf",".root"),"QG_axis2_Response_"+names_resp[i][1].replace(".pdf",".root"),title,"#sigma_{2}","Response",0.0,0.08,0.7,1.4,name,False,binWidth=0.005) 

#                        name="Comparison_"+"QG_mult_Response_"+names_resp[i][0].replace("_L1L2L3.pdf",".pdf")
#                        title="Comparison of responses vs. QG #sigma_{2} in #eta "+str(eta_bins[ind][0])+"-"+str(eta_bins[ind][1]) + " and p_{T} "+str(pt_bins[i%len(pt_bins)][0])+"-"+str(pt_bins[i%len(pt_bins)][1])
#                        Comparison(class_labels,colors,"QG_mult_Response_"+names_resp[i][0].replace(".pdf",".root"),"QG_mult_Response_"+names_resp[i][1].replace(".pdf",".root"),title,"N const.","Response",0.0,25,0.7,1.4,name,False,binWidth=1) 

#	except:
#		time.sleep(5)

if Compare:
	for i in range(0,len(names_eta_bin)):
		name="Comparison_"+"Resolution_"+names_eta_bin[i][0].replace("_L1L2L3.pdf",".pdf")
		title="Comparison of resolution in #eta "+str(eta_bins[i][0])+"-"+str(eta_bins[i][1])
		Comparison_Stack(class_labels,colors,"Resolution_"+names_eta_bin[i][0].replace(".pdf",".root"),"Resolution_"+names_eta_bin[i][1].replace(".pdf",".root"),title,"gen p_T","Resolution",0.,300.,0.,.5,name,"Normal",showStats=False)


	ind=0
	for i in range(0,len(names_eta_pt_bin)):
		if i%len(pt_bins)==0 and i!=0:
			ind=+1

	        name="Comparison_"+"Response_"+names_eta_pt_bin[i][0].replace("_L1L2L3.pdf",".pdf")
	        title="Comparison of responses in #eta "+str(eta_bins[ind][0])+"-"+str(eta_bins[ind][1]) + " and p_{T} "+str(pt_bins[i%len(pt_bins)][0])+"-"+str(pt_bins[i%len(pt_bins)][1])
	#        print "Title: "+title + " Plot: "+names_eta_pt_bin[i][0]+" i: "+str(i)+" ind: "+str(ind)
	        Comparison_Stack(class_labels,colors,"Response_"+names_eta_pt_bin[i][0].replace(".pdf",".root"),"Response_"+names_eta_pt_bin[i][1].replace(".pdf",".root"),title,"Response","Fraction of jets",0.,2.,0.0,5.,name,"Normal",showStats=True)


		name="Comparison_"+"QG_ptD_Response_"+names_eta_pt_bin[i][0].replace("_L1L2L3.pdf",".pdf")
		title="Comparison of responses vs. QG p_{T}D in #eta "+str(eta_bins[ind][0])+"-"+str(eta_bins[ind][1]) + " and p_{T} "+str(pt_bins[i%len(pt_bins)][0])+"-"+str(pt_bins[i%len(pt_bins)][1])
	#	print "Title: "+title+"Plot: "+names_eta_pt_bin[i][0]+" i: "+str(i)+" ind: "+str(ind)
		Comparison_Stack(class_labels,colors,"QG_ptD_Response_"+names_eta_pt_bin[i][0].replace(".pdf",".root"),"QG_ptD_Response_"+names_eta_pt_bin[i][1].replace(".pdf",".root"),title,"p_{T}D","Response",0.,.9,.75,1.3,name,"Density",showStats=False)

	        name="Comparison_"+"QG_axis2_Response_"+names_eta_pt_bin[i][0].replace("_L1L2L3.pdf",".pdf")
	        title="Comparison of responses vs. QG #sigma_{2} in #eta "+str(eta_bins[ind][0])+"-"+str(eta_bins[ind][1]) + " and p_{T} "+str(pt_bins[i%len(pt_bins)][0])+"-"+str(pt_bins[i%len(pt_bins)][1])
	#        print "Title: "+title+"Plot: "+names_eta_pt_bin[i][0]+" i: "+i+" ind: "+ind
	        Comparison_Stack(class_labels,colors,"QG_axis2_Response_"+names_eta_pt_bin[i][0].replace(".pdf",".root"),"QG_axis2_Response_"+names_eta_pt_bin[i][1].replace(".pdf",".root"),title,"#sigma_{2}","Response",0.0,0.1,0.75,1.3,name,"Density",showStats=False)


	        name="Comparison_"+"QG_mult_Response_"+names_eta_pt_bin[i][0].replace("_L1L2L3.pdf",".pdf")
	        title="Comparison of responses vs. N of const. in #eta "+str(eta_bins[ind][0])+"-"+str(eta_bins[ind][1]) + " and p_{T} "+str(pt_bins[i%len(pt_bins)][0])+"-"+str(pt_bins[i%len(pt_bins)][1])
	#        print "Title: "+title+"Plot: "+names_eta_pt_bin[i][0]+" i: "+i+" ind: "+ind
	        Comparison_Stack(class_labels,colors,"QG_mult_Response_"+names_eta_pt_bin[i][0].replace(".pdf",".root"),"QG_mult_Response_"+names_eta_pt_bin[i][1].replace(".pdf",".root"),title,"N of const.","Response",0,25,0.6,1.3,name,"Density",showStats=False)

